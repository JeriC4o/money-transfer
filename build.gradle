plugins {
    id "net.ltgt.apt" version "0.21"
    id 'nu.studer.jooq' version '3.0.3'
    id "org.flywaydb.flyway" version "5.2.4"
    id 'java'
    id "idea"
}

group 'com.yetanotherbank.api'
version '0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def databaseUrl = "jdbc:h2:file:$buildDir/money_transfer_service;AUTO_SERVER=TRUE"
def databaseUser = 'sa'
def databasePass = ''
def generatedPropertiesPath = file("$buildDir/resources/main/database.properties")

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'com.sparkjava:spark-core:2.8.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.2'
    compile 'com.google.dagger:dagger:2.12'
    compile 'org.apache.commons:commons-lang3:3.8.1'
    compile 'org.apache.commons:commons-configuration2:2.4'
    compile 'commons-beanutils:commons-beanutils:1.9.3'
    compile 'commons-dbutils:commons-dbutils:1.7'
    compile 'commons-io:commons-io:2.6'
    compile 'org.slf4j:slf4j-simple:1.7.13'
    compile 'org.jooq:jooq:3.11.9'
    compile 'com.h2database:h2:1.4.193'
    compile 'com.squareup.retrofit2:retrofit:2.5.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.5.0'
    compile 'com.neovisionaries:nv-i18n:1.23'
    compile 'org.apache.commons:commons-dbcp2:2.6.0'


    annotationProcessor 'com.google.dagger:dagger-compiler:2.12'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.12'

    jooqRuntime 'com.h2database:h2:1.4.193'

    testCompile 'junit:junit:4.12'
}

task generateConnectionProperties() doLast {
    def props = new Properties()

    props['database.url'] = databaseUrl.toString()
    println databaseUrl

    props['database.user'] = databaseUser.toString().replaceAll("\\\\", '')
    props['database.pass'] = databasePass.toString()

    generatedPropertiesPath.createNewFile()

    generatedPropertiesPath.withWriter { Writer w -> props.store(w, null) }
}

task start(type: JavaExec, dependsOn: [assemble, jar]) {
    main = "-jar";
    args jar.archivePath
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}

idea {
    module {
        sourceDirs += file("$buildDir/generated/sources/annotationProcessor/java/main")
        testSourceDirs += file("$buildDir/generated/sources/annotationProcessor/java/test")
    }
}

//UberJar
jar {
    manifest {
        attributes "Main-Class": "com.yetanotherbank.api.ApplicationBootstrapper"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    dependsOn generateConnectionProperties
}

flyway {
    url = databaseUrl
    user = databaseUser
    password = databasePass

    baselineOnMigrate = true
}

assemble.dependsOn flywayMigrate

jooq {
    version = '3.11.9'
    edition = 'OSS'

    moneyTransfer(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = databaseUrl
            user = databaseUser
            password = databasePass
        }

        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.h2.H2Database'
                includes = '.*'
                excludes = ''
            }
            generate {
                daos = true
            }
        }
    }
}

test {
    dependsOn assemble, jar
    outputs.upToDateWhen { false }

    reports {
        junitXml.enabled = false
        html.enabled = true
    }

    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        showCauses true
        showStackTraces true

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }

    include 'com/yetanotherbank/api/suit/*'
    exclude 'com/yetanotherbank/api/test/*Test'
}
